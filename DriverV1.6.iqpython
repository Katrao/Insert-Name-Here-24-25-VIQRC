{"mode":"Text","hardwareTarget":"brain","textContent":"#region VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\n# Brain should be defined by default\nbrain=Brain()\n\n# Robot configuration code\nbrain_inertial = Inertial()\ncontroller = Controller()\n\n\n\n# generating and setting random seed\ndef initializeRandomSeed():\n    wait(100, MSEC)\n    xaxis = brain_inertial.acceleration(XAXIS) * 1000\n    yaxis = brain_inertial.acceleration(YAXIS) * 1000\n    zaxis = brain_inertial.acceleration(ZAXIS) * 1000\n    systemTime = brain.timer.system() * 100\n    urandom.seed(int(xaxis + yaxis + zaxis + systemTime)) \n    \n# Initialize random seed \ninitializeRandomSeed()\n\n#endregion VEXcode Generated Robot Configuration\n# ------------------------------------------\n# \n# \tProject:      DriverINH\n# \tAuthor:       Team 32092D Insert Name Here\n# \tVersion:      V1.6\n# \tDescription:  Driver Code\n#   Season:       2024-25 Rapid Relay\n# \n# ------------------------------------------\n\n# Imports\nfrom vex import *\n\n# Configure devices\nbrain = Brain()\ngyro = Inertial()\nleftmotor = Motor(Ports.PORT8, 2.0, True)\nrightmotor = Motor(Ports.PORT12, 2.0, False)\ndrivetrain = SmartDrive(leftmotor, rightmotor, gyro, 200)\nstrafemotor = Motor(Ports.PORT10, 2.0, True)\n\n# Initialize motor velocities and torques\ndrivetrain.set_drive_velocity(100, PERCENT)\ndrivetrain.set_turn_velocity(50, PERCENT)\ndrivetrain.set_stopping(BRAKE)\n\nstrafemotor.set_velocity(100, PERCENT)\nstrafemotor.set_max_torque(100, PERCENT)\nstrafemotor.set_stopping(BRAKE)\n\n# Define strafing and thresholds\ndef strafeleft(distance=-1):\n    if distance >= 0:\n        strafemotor.spin(FORWARD)\n    else:\n        strafemotor.spin_for(FORWARD, distance, TURNS)\n\ndef straferight(distance=-1):\n    if distance >= 0:\n        strafemotor.spin(FORWARD)\n    else:\n        strafemotor.spin_for(REVERSE, distance, TURNS)\n\ndef brake():\n    drivetrain.stop()\n    strafemotor.stop()\n\nupt = 80\ndownt = -80\nleftt = -80\nrightt = 80\n\n# Drive code\nwhile True:\n    #Get controller joystick positions\n    axisa = controller.axisA.position()\n    axisb = controller.axisB.position()\n    axisc = controller.axisC.position()\n    axisd = controller.axisD.position()\n\n    #Joystick controls\n    if axisa >= upt:\n        drivetrain.drive(FORWARD)\n    elif axisa <= downt:\n        drivetrain.drive(REVERSE)\n    elif axisc >= rightt:\n        drivetrain.turn(RIGHT)\n    elif axisc <= leftt:\n        drivetrain.turn(LEFT)\n    elif axisb >= rightt:\n        straferight()\n    elif axisb <= leftt:\n        strafeleft()\n    else:\n        brake()","textLanguage":"python","robotConfig":[{"port":[],"name":"controller","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","e":"","eDir":"false","f":"","fDir":"false","l3r3":"","l3r3Dir":"false","drive":"none"}}],"slot":0,"platform":"IQ","sdkVersion":"20230818.11.00.00","appVersion":"4.0.3","fileFormat":"2.0.0","targetBrainGen":"Second","v5SoundsEnabled":false}